go.Scattergl(
x=xgrid,
y=500,
mode="lines",
line=dict(color="red", width=2),
),
],
layout={"showlegend": False},
)
scatterplot = go.FigureWidget(
data=[
go.Scattergl(
x=x,
y=y,
mode="markers",
marker=dict(color="rgba(0, 0, 0, 0.05)", size=5),
),
go.Scattergl(
x=xgrid,
y=[500],
mode="lines",
line=dict(color="red", width=2),
),
],
layout={"showlegend": False},
)
View(barplot)
View(barplot)
View(data)
scatterplot.data[1]
scatterplot.data[1].visible = True
barplot.data
barplot.data[1]
barplot.data[0]
barplot.data
scatterplot.data[1]
scatterplot.data[0]
barplot.show()
highlight_categoryB = [category == 'Category B' for category in data['Category']]
highlight_categoryB
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible=visible,
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible=visible,
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible=True,
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible=false,
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible='legend only',
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible='legendonly',
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
import numpy as np
import plotly.graph_objs as go
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
data = {
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
}
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a list of colors corresponding to each data point
colors = [color_palette[category] for category in data['Category']]
# Create a list to control the visibility of bars
visible = [category == 'Category B' for category in data['Category']]
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=data['Category'],
y=data['Value'],
marker=dict(color=colors),
visible=False,
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a DataFrame with 'Category' and 'Value' columns
data = pd.DataFrame({
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
})
# Add a 'Color' column based on the 'Category' column
data['Color'] = data['Category'].map(color_palette)
# Mask to only highlight 'Category B'
highlight_categoryB = data['Category'] == 'Category B'
import numpy as np
import pandas as pd
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a DataFrame with 'Category' and 'Value' columns
data = pd.DataFrame({
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
})
# Add a 'Color' column based on the 'Category' column
data['Color'] = data['Category'].map(color_palette)
# Mask to only highlight 'Category B'
highlight_categoryB = data['Category'] == 'Category B'
highlight_categoryB
# Example of using plotly via shinywidgets
# Example of using plotly via shinywidgets
import pandas as pd
import numpy as np
import plotly.graph_objs as go
from shiny import App, ui
from shinywidgets import output_widget, register_widget
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a DataFrame with 'Category' and 'Value' columns
my_dataframe = pd.DataFrame({
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
})
# Add a 'Color' column based on the 'Category' column
my_dataframe['Color'] = my_dataframe['Category'].map(color_palette)
# Filter the DataFrame to only include rows with 'Category B'
filtered_data = my_dataframe[my_dataframe['Category'] == 'Category B']
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=my_dataframe['Category'],
y=my_dataframe['Value'],
marker=dict(color=my_dataframe['Color'])
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=my_dataframe['Category'],
y=my_dataframe['Value'],
marker=dict(color=my_dataframe['Color']),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
# Create a bar chart
bar_chart = go.FigureWidget(
data=[
go.Bar(
x=filtered_data['Category'],
y=filtered_data['Value'],
marker=dict(color=filtered_data['Color']),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
# Display the bar chart
bar_chart.show()
my_dataframe['Category'] == 'Category B'
import pandas as pd
import numpy as np
import plotly.graph_objs as go
from shiny import App, ui
from shinywidgets import output_widget, register_widget
# Generate some random data with multiple categories
categories = ['Category A', 'Category B', 'Category C']
# Define a color palette for the categories
color_palette = {
'Category A': 'blue',
'Category B': 'green',
'Category C': 'orange'
}
# Create a DataFrame with 'Category' and 'Value' columns
my_dataframe = pd.DataFrame({
'Category': np.random.choice(categories, 1000),
'Value': np.random.rand(1000)
})
# Add a 'Color' column based on the 'Category' column
my_dataframe['Color'] = my_dataframe['Category'].map(color_palette)
# Filter the DataFrame to only include rows with 'Category B'
datamaskB = my_dataframe['Category'] == 'Category B'
def data_with_keep():
df = my_dataframe.copy()
# df["keep"] = keep_rows()
return df
def make_bar_plot():
df = data_with_keep()
barplot = go.FigureWidget(
data=[
go.Bar(
x=df['Category'],
y=df['Value'],
marker=dict(color=df['Color']),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
register_widget("barplot", barplot)
make_bar_plot()
from shinywidgets import output_widget, register_widget
from shinywidgets import output_widget, register_widget
make_bar_plot()
import pandas as pd
import numpy as np
import plotly.graph_objects as go
# Create a DataFrame with 'Category' and 'Value' columns
categories = ['A', 'B', 'C', 'D', 'E']  # Example categories
data_points = 100  # Number of data points per category
my_dataframe = pd.DataFrame({
'Category': np.repeat(categories, data_points),
'Value': np.random.rand(len(categories) * data_points),
})
# Create the bar plot using Plotly
barplot = go.FigureWidget(
data=[
go.Bar(
x=my_dataframe['Category'],
y=my_dataframe['Value'],
marker=dict(color=my_dataframe['Value'], colorbar=dict(title='Colorbar Title')),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
barplot.update_layout(barmode='group')  # Optional: Set the bar mode
barplot.show()
import pandas as pd
import numpy as np
import plotly.graph_objects as go
# Create a DataFrame with 'Category' and 'Value' columns
categories = ['A', 'B', 'C', 'D', 'E']  # Example categories
data_points = 5  # Number of data points per category
my_dataframe = pd.DataFrame({
'Category': np.repeat(categories, data_points),
'Value': np.random.rand(len(categories) * data_points),
})
# Create the bar plot using Plotly
barplot = go.FigureWidget(
data=[
go.Bar(
x=my_dataframe['Category'],
y=my_dataframe['Value'],
marker=dict(color=my_dataframe['Value'], colorbar=dict(title='Colorbar Title')),
),
],
layout={"xaxis_title": "Category", "yaxis_title": "Value"},
)
barplot.update_layout(barmode='group')  # Optional: Set the bar mode
barplot.show()
